---------------------------------- COMPONENT ------------------------------

<aura:component implements="force:lightningQuickAction,force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId" access="global" >

    <!-- criar uma referencia de envio de dados -->
     <aura:attribute name="pageReference" type="Object" /> 
    
     <lightning:navigation aura:id="navService"/> 
    <!-->declaracao de variaveis<-->

    <lightning:card title="Criar Leads">
        <div class="slds-p-around_medium">
       	
            <lightning:recordEditForm aura:id="recordEditForm"
                           			  objectApiName="Lead"
                                      onsuccess="{!c.botaoLead}">
            	<lightning:messages />
            	<lightning:inputField fieldName="Name" />
                <lightning:inputField fieldName="Phone" />
                <lightning:inputField fieldName="Company" />
                <lightning:inputField fieldName="Status" />
            	
                <lightning:button class="slds-m-top_small" 
                                  type="submit" 
                                  label="Adicionar" 
                                  aura:id="botaoIdLead" />
        	</lightning:recordEditForm>            

        </div>

    	
    </lightning:card>
    
</aura:component>

---------------------------------------------------------------
controller

({
	botaoLead : function(component, event, helper) {
		helper.addLead(component, event, help);
	}
})

------------------------------------------
helper

({
	addLead : function(component, event, helper) {
		/*
        	toastEvent -> uma biblioteca de msg personalizada
            
            $A -> é uma biblioteca do aura -> showToast
            
        */
        
        var toastEvent = $A.get("e.force:showToast");
        //montar a msg de alert do toastEvent
        //usando a variavel
        //atribuir valores para title, message e type
        //setParams -> atribuir valores para a msg, em um obj
        
        toastEvent.setParams({
            'title' : 'Feito!',
            'message' :'Lead criada com sucesso',
            'type' : 'success'
        });
               
        
        toastEvent.fire();
        
        var registroCriado = event.getParams();
        console.log(registroCriado.response.id);
        //trazer para o contexto da minha função, o component lightning:navigation
        var navService = component.find("navService");
        
        //montar um objeto de referência, com dados de direcionamento de página, o usuário deve cair 
        //na página certa =D
        var pageReference = {
            "type": 'standard__recordPage',         
            "attributes": {              
                "recordId": registroCriado.response.id,
                "actionName": "view",               
                "objectApiName":"Lead"              
            }        
        };
        
        console.log(pageReference);
        
        //setar para o atributo lááááá do aura chamado pageReference, o nosso objeto montado acima
        component.set("v.pageReference", pageReference);
        //pegar as informações de referencia do componente
        var redirect = component.get("v.pageReference");
        //mandar o redirecionamento via navigation
        navService.navigate(redirect);       
	},
    handleReset: function(cmp) {
        cmp.find('field').forEach(function(f) {
            f.reset();
        });
    }
})
-------------------------------------------------
